git init
git add .
git commit -m "mensaje"
git push origin master

git status -> verificar el estado
git log name -> muestra todos los logs (commits and change)
git show "name" ->  muestra el commit y los cambios realizados de la version anterior a la actual
git log "name" -> mostrara tambien los hash (codigos  q identifican a la madificacion)
git diff hash1 hash2 -> usamos los logs segun "git log" y nos retornara la diferencia
  hash1 : 7e78365c090e3136aaa1706b63127a12b5f47a27
  hash2 : e77ba9ab510f2521ad39cf50a4fea2b80d8736fb

> Si queremos volver a una version anterior (tener mucho cuidado al usar)
git reset <hash> --hard -> todo vuelve al estado anterior
git reset <hash> --soft -> lo que estaba en staging continua en stagin

> Cuando hacemos cambios y no hacemos "git add", si ponemos "git diff" mostrara la diferencia entre
  lo que se tega en stagin y lo que se tenga actualmente modificado

git log --stat -> muestra los cambios especificos asi como los bytes
git log --all -> muestra todo incluyendo branch
git log --all --graph -> muestra mas visualmente (con rayitas)
git log --all --graph --decorate --online -> muestra toda la historia de maneta mas comprimida y ordenada


git checkout <hash> file -> nos regresa al estado del hash solo al archivo file, si se quiere mantener cambios hacer add y commit

git branch "name" -> para crear una rama

git checkout "name" -> para movernos entre las ramas

- Para crear una llave publica y privada
ssh-keygen -t rsa -b 4096 -C "alex.flores.m@uni.pe"
- Para saber si el servicio ssh esta activo
val $(ssh-agent -s)
- Para que el sistema detecte la llave
ssh-add ~/.ssh/id_rsa
- En caso de error de permisos
chmod 400 ~/.ssh/id_rsa

---------------------------------
Para manejar versiones en github
-Creamos un tag
git tag -a <version> -m "msg" hash
git tag -a v0.1 -m "Resultado primera parte del curso" 2435e69

- para visulaizar tags
git tag

- para ver un tag u sus hash asociado
git show-ref --tags

- Para subier estos cambios a git hub
git push origin --tags